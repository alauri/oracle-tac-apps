- name: Remove previously pyenv installation
  ansible.builtin.file:
    path: ~/.pyenv
    state: absent

- name: Install pyenv
  ansible.builtin.shell:
    cmd: curl https://pyenv.run | bash

- name: Update .bashrc with pyenv binary
  ansible.builtin.blockinfile:
    path: ~/.bashrc
    marker: ""
    marker_begin: ""
    marker_end: ""
    block: |
      export PATH="~/.pyenv/bin:$PATH"
      eval "$(pyenv init -)"
      eval "$(pyenv virtualenv-init -)"

- name: Install Python3.10.5
  ansible.builtin.shell:
    cmd:  ~/.pyenv/libexec/pyenv install 3.10.5 && ~/.pyenv/libexec/pyenv local 3.10.5

- name: Download Poetry
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
    dest: /tmp/get-poetry.py
    mode: '0664'

- name: Install Poetry
  command: python3 /tmp/get-poetry.py -y

- name: Create a directory if it does not exist
  ansible.builtin.file:
    # TODO: Put this absolute path within a variable
    path: ~/workspace/applications/py/Oracle-HA
    state: directory
    owner: oracle
    mode: '0755'

- name: Copy the whole Python application example
  ansible.builtin.copy:
    # TODO: find a better way to access the Python application example, maybe
    # with an ansible variable
    src: ../../../../examples/python/
    dest: ~/workspace/applications/py/Oracle-HA/
    owner: oracle
    group: oracle
    mode: '0644'

- name: Enable poetry and install dependencies
  ansible.builtin.shell:
    chdir: ~/workspace/applications/py/Oracle-HA/
    cmd: . ~/.bash_profile && poetry install

- name: Delete Poetry installation script
  ansible.builtin.file:
    path: /tmp/get-poetry.py
    state: absent
    remote_src: true
